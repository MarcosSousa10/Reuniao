/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cconexao;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author marcos
 */
public class listareuniao extends javax.swing.JFrame {
    telan enciartexto;
    reuniaoo enviartexto;
   

 
    
   
    /**
     * Creates new form listareuniao
     */
    public listareuniao() {

        initComponents();        
        da.requestFocus();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/cconexao/o.png")));
        //relogio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        da = new javax.swing.JFormattedTextField();
        ta = new javax.swing.JFormattedTextField();
        a = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        nomes = new javax.swing.JTextField();
        horafim = new javax.swing.JLabel();
        Horainicio = new javax.swing.JLabel();
        Datainicio = new javax.swing.JLabel();
        prioridade = new javax.swing.JLabel();
        observacao = new javax.swing.JLabel();
        Equipamento = new javax.swing.JLabel();
        salareuniao1 = new javax.swing.JLabel();
        usu = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem4 = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Prioridade", "Data", "Hora de Inicio", "Hora de termino", "Equipamento", "Sala", "Observação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(0);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(1).setMinWidth(150);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(2).setMinWidth(100);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(3).setMinWidth(100);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(4).setMinWidth(100);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(5).setMinWidth(100);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(6).setMinWidth(100);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(7).setMinWidth(150);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(7).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(8).setMinWidth(500);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(500);
            jTable1.getColumnModel().getColumn(8).setMaxWidth(500);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1320, 490));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Voltar");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 550, 110, 30));

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("Pesquisa");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton4KeyPressed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 550, 140, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setText("Data Fim");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 560, 80, 20));

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel2.setText("Data Inicio");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 560, 100, 20));

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setText("Excluir");
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 550, 110, 30));

        da.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        try {
            da.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        da.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        da.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daActionPerformed(evt);
            }
        });
        da.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                daKeyPressed(evt);
            }
        });
        getContentPane().add(da, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 550, 100, 30));

        ta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        try {
            ta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ta.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        ta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                taKeyPressed(evt);
            }
        });
        getContentPane().add(ta, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 550, 90, 30));
        getContentPane().add(a, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 180, -1, -1));

        jButton3.setFont(new java.awt.Font("Ubuntu", 3, 14)); // NOI18N
        jButton3.setText("Editar");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 550, 100, 30));
        getContentPane().add(nomes, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 170, -1, -1));
        getContentPane().add(horafim, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 140, 10, -1));
        getContentPane().add(Horainicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 170, 10, -1));
        getContentPane().add(Datainicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 140, 10, -1));
        getContentPane().add(prioridade, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 130, 10, 20));
        getContentPane().add(observacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 340, -1, -1));
        getContentPane().add(Equipamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 340, -1, -1));
        getContentPane().add(salareuniao1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 330, -1, -1));

        usu.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        usu.setText("administrador");
        getContentPane().add(usu, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 0, 130, 20));

        jButton2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButton2.setText("Imprimir");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 550, 120, 30));

        jButton6.setFont(new java.awt.Font("Ubuntu", 3, 14)); // NOI18N
        jButton6.setText("Atualzar");
        jButton6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 550, 120, 30));

        jMenuBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuBar1.setForeground(new java.awt.Color(1, 1, 1));
        jMenuBar1.setToolTipText("");
        jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jMenuBar1.setName(""); // NOI18N

        jMenu1.setText("File");

        jRadioButtonMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("Imprimir");
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jRadioButtonMenuItem1);

        jRadioButtonMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("Atulizar");
        jRadioButtonMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jRadioButtonMenuItem2);

        jRadioButtonMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        jRadioButtonMenuItem3.setSelected(true);
        jRadioButtonMenuItem3.setText("Excluir");
        jRadioButtonMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jRadioButtonMenuItem3);

        jRadioButtonMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jRadioButtonMenuItem4.setSelected(true);
        jRadioButtonMenuItem4.setText("Editar");
        jRadioButtonMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jRadioButtonMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
      
    public void relogio(){
                  Timer timer =new Timer();
       
final long  Segundos =(1000*60);
    TimerTask tarefa =new TimerTask() {
        
    @Override
    public void run() {
        //repetido em tempos em tempos
        listar();
        
    }
};
    timer.scheduleAtFixedRate(tarefa,60,Segundos);
        
        
 }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       listar();
  
    }//GEN-LAST:event_jButton1ActionPerformed

    public void listar(){
            try{
        Connection con =Conexao.fazconexao();
       
        
           
    
        String sql="select alocacao.ID as ID,usuarios.nome as batman,alocacao.PRIORIDADE as PRIORIDADE,date_format(alocacao.DATAINICIO,'%d/%m/%Y') as Data,alocacao.HORAINICIO as HORAINICIO,alocacao.HORAFIM as HORAFIM,alocacao.EQUIPAMENTO as EQUIPAMENTO,alocacao.SALAREUNIAO as SALAREUNIAO, alocacao.ASSUNTO as ASSUNTO from usuarios inner join alocacao on usuarios.idusuario = alocacao.idusuario order by alocacao.datainicio;";
       
             PreparedStatement stmt=con.prepareStatement(sql);
             
        ResultSet rs = stmt.executeQuery();
            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                modelo.addRow(new Object[]{
       
                //      rs.getString("ID"),rs.getString("batman"),rs.getString("PRIORIDADE"),rs.getString("DATAINICIO"),rs.getString("HORAINICIO"),rs.getString("HORAFIM"),rs.getString("EQUIPAMENTO"),rs.getString("SALAREUNIAO"),rs.getString("ASSUNTO")});
                      rs.getString("ID"),rs.getString("batman"),rs.getString("PRIORIDADE"),rs.getString("Data"),rs.getString("HORAINICIO"),rs.getString("HORAFIM"),rs.getString("EQUIPAMENTO"),rs.getString("SALAREUNIAO"),rs.getString("ASSUNTO")});
            }
            rs.close();
            con.close();
                }catch(SQLException e){
            e.printStackTrace();
        }
}
public String data(){
     String dia =da.getText().substring(8,10);
            String mes =da.getText().substring(5,7);
            String ano =da.getText().substring(0,4);
            String my=dia+"/"+mes+"/"+ano;  
    return my;
    
}

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

         try{
         Connection con = Conexao.fazconexao();
        String sql="select *from usuarios where nome=? and administrador=?";
            PreparedStatement stmt=con.prepareStatement(sql); 
            stmt.setString(1,usu.getText());
            stmt.setString(2,"S");
             ResultSet rs = stmt.executeQuery();
        if(rs.next()){
                           
        if (a.getText().equals("")){
    JOptionPane.showMessageDialog(null, "Favor Selecionar Uma Linha Na Tabela");
}else{       
            String msg = "Deseja realmente excluir !?"; 
            int resp = JOptionPane.showConfirmDialog(null, msg, "Confirmação", JOptionPane.YES_NO_OPTION);

                  // excluir registro selecionando pelo ID
                  if (resp == JOptionPane.YES_OPTION) {
        try{
        Connection con1 =Conexao.fazconexao();
        String sql1="delete from alocacao where id=? ";
        PreparedStatement stmt1=con.prepareStatement(sql1);
        
        stmt1.setString(1,a.getText());
        stmt1.execute();
        stmt1.close();
        con.close();
        JOptionPane.showMessageDialog(null, "Excluido!");
          a.setText("");
            listar();
        }catch(SQLException e){
            e.printStackTrace();
        }}}
                      
        }else{
            JOptionPane.showMessageDialog(null,"O Usuario Não Tem Permição de Acesso a Edição  ");
        }
            
      }catch (SQLException erro ){
          JOptionPane.showMessageDialog(null,"Erro");
      }      
        
        
        
        
        
        
        
        
        
        
        
        
        
        
       
      
         //    lista a=new lista();
           //  a.setVisible(true);
            /* setVisible(false); /*       Excuirreuniao asd=new Excuirreuniao();

       asd.setVisible(true);    }//GEN-LAST:event_jButton5ActionPerformed
*/}
    
     /*public void funcaoaa() throws SQLException {
        if (tela == null) {
            tela = new telan();
            tela.setVisible(true);          
            tela.recebendoo(usu.getText());

        } else {
            tela.setVisible(true);
            tela.setState(Sala_Reuniao.NORMAL);
            tela.recebendoo(usu.getText());
            tela.relogio();

        }
    }*/
    
    
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

         try{
        Connection con =Conexao.fazconexao();
       
        
 //        String sql="select usuarios.nome as batman,alocacao.PRIORIDADE as PRIORIDADE,alocacao.DATAINICIO as DATAINICIO,alocacao.HORAINICIO as HORAINICIO,alocacao.HORAFIM as HORAFIM,alocacao.ASSUNTO as ASSUNTO from usuarios inner join alocacao on usuarios.idusuario = alocacao.idusuario order by alocacao.datainicio;";


    //  String sql="select usuarios.nome as batman,alocacao.PRIORIDADE as PRIORIDADE,alocacao.DATAINICIO as DATAINICIO,alocacao.HORAINICIO as HORAINICIO,alocacao.HORAFIM as HORAFIM,alocacao.ASSUNTO as ASSUNTO from usuarios inner join alocacao on alocacao.datainicio>=? and alocacao.datainicio<=? order by alocacao.datainicio;";
       String sql="select alocacao.ID as ID,usuarios.nome as batman,alocacao.PRIORIDADE as PRIORIDADE,alocacao.DATAINICIO as DATAINICIO,alocacao.HORAINICIO as HORAINICIO,alocacao.HORAFIM as HORAFIM, alocacao.EQUIPAMENTO as EQUIPAMENTO,alocacao.SALAREUNIAO as SALAREUNIAO,alocacao.ASSUNTO as ASSUNTO from alocacao inner join usuarios on usuarios.idusuario = alocacao.idusuario where DATAINICIO>= ? AND DATAINICIO<= ?";
        PreparedStatement stmt=con.prepareStatement(sql);
                     // stmt.setTime(1,da);
                      String dia =da.getText().substring(0,2);
            String mes =da.getText().substring(3,5);
            String ano =da.getText().substring(6);
            String my=ano+"-"+mes+"-"+dia;            
          //  stmt.setObject(3,da.getText());
          String di =ta.getText().substring(0,2);
            String me =ta.getText().substring(3,5);
            String an =ta.getText().substring(6);
            String myy=an+"-"+me+"-"+di;       
            stmt.setObject(1,my);
            stmt.setObject(2,myy);
                     //  stmt.setString(1,da.getText());
                    //   stmt.setString(2,ta.getText());
        ResultSet rs = stmt.executeQuery();
            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                modelo.addRow(new Object[]{
                      rs.getString("ID"),rs.getString("batman"),rs.getString("PRIORIDADE"),rs.getString("DATAINICIO"),rs.getString("HORAINICIO"),rs.getString("HORAFIM"),rs.getString("EQUIPAMENTO"),rs.getString("SALAREUNIAO"),rs.getString("ASSUNTO")});
            }
            rs.close();
            con.close();
                }catch(SQLException e){
            e.printStackTrace();
        }
        
        
        
        
        

             }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed
if(evt.getKeyCode()==evt.VK_ENTER){
      try{
        Connection con =Conexao.fazconexao();
       
        
 //        String sql="select usuarios.nome as batman,alocacao.PRIORIDADE as PRIORIDADE,alocacao.DATAINICIO as DATAINICIO,alocacao.HORAINICIO as HORAINICIO,alocacao.HORAFIM as HORAFIM,alocacao.ASSUNTO as ASSUNTO from usuarios inner join alocacao on usuarios.idusuario = alocacao.idusuario order by alocacao.datainicio;";


    //  String sql="select usuarios.nome as batman,alocacao.PRIORIDADE as PRIORIDADE,alocacao.DATAINICIO as DATAINICIO,alocacao.HORAINICIO as HORAINICIO,alocacao.HORAFIM as HORAFIM,alocacao.ASSUNTO as ASSUNTO from usuarios inner join alocacao on alocacao.datainicio>=? and alocacao.datainicio<=? order by alocacao.datainicio;";
       String sql="select alocacao.ID as ID,usuarios.nome as batman,alocacao.PRIORIDADE as PRIORIDADE,alocacao.DATAINICIO as DATAINICIO,alocacao.HORAINICIO as HORAINICIO,alocacao.HORAFIM as HORAFIM,alocacao.SALAREUNIAO as SALAREUNIAO, alocacao.ASSUNTO as ASSUNTO from alocacao inner join usuarios on usuarios.idusuario = alocacao.idusuario where DATAINICIO>= ? AND DATAINICIO<= ?";
        PreparedStatement stmt=con.prepareStatement(sql);
                     // stmt.setTime(1,da);
                      String dia =da.getText().substring(0,2);
            String mes =da.getText().substring(3,5);
            String ano =da.getText().substring(6);
            String my=ano+"-"+mes+"-"+dia;            
          //  stmt.setObject(3,da.getText());
          String di =ta.getText().substring(0,2);
            String me =ta.getText().substring(3,5);
            String an =ta.getText().substring(6);
            String myy=an+"-"+me+"-"+di;       
            stmt.setObject(1,my);
            stmt.setObject(2,myy);
                     //  stmt.setString(1,da.getText());
                    //   stmt.setString(2,ta.getText());
        ResultSet rs = stmt.executeQuery();
            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                modelo.addRow(new Object[]{
                     rs.getString("ID"),rs.getString("batman"),rs.getString("PRIORIDADE"),rs.getString("DATAINICIO"),rs.getString("HORAINICIO"),rs.getString("HORAFIM"),rs.getString("SALAREUNIAO"),rs.getString("ASSUNTO")});
            }
            rs.close();
            con.close();
                }catch(SQLException e){
            e.printStackTrace();
        }
        
    
}
// TODO add your handling code here:
    }//GEN-LAST:event_jButton4KeyPressed

    private void daActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_daActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        Carregar();

    }//GEN-LAST:event_jTable1MouseClicked

    private void daKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_daKeyPressed
if (evt.getKeyCode()==evt.VK_ENTER){
    ta.requestFocus();
}





    }//GEN-LAST:event_daKeyPressed

    private void taKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taKeyPressed
if (evt.getKeyCode()==evt.VK_ENTER){
jButton4.requestFocus();
}


    }//GEN-LAST:event_taKeyPressed
public void recebendo(String recebe){
        usu.setText(recebe);
     }




    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
  try{
         Connection con = Conexao.fazconexao();
        String sql="select *from usuarios where nome=? and administrador=?";
            PreparedStatement stmt=con.prepareStatement(sql); 
            stmt.setString(1,usu.getText());
            stmt.setString(2,"S");
             ResultSet rs = stmt.executeQuery();
        if(rs.next()){
                  if(a.getText().equals("")){
        JOptionPane.showMessageDialog(null,"Favor Selecionar Uma Linha");}else{
        if(enciartexto == null){
            
    enciartexto=new telan();           
    enciartexto.setVisible(true);
               this.dispose(); 
    enciartexto.recebendo(a.getText(),nomes.getText(),prioridade.getText(),Datainicio.getText(),Horainicio.getText(),horafim.getText(),Equipamento.getText(),salareuniao1.getText(),observacao.getText(),usu.getText());
     
    listar();
  
    
}else{
    enciartexto.setVisible(true);
 this.dispose(); 
    enciartexto.setState(telan.NORMAL);
enciartexto.recebendo(a.getText(),nomes.getText(),prioridade.getText(),Datainicio.getText(),Horainicio.getText(),horafim.getText(),Equipamento.getText(),salareuniao1.getText(),observacao.getText(),usu.getText());  //  nomess.nomes(nomes.getText());


listar();

        }
        
        }
            
        }else{
            JOptionPane.showMessageDialog(null,"O Usuario Não Tem Permição de Acesso a Edição  ");
        }
            
      }catch (SQLException erro ){
          JOptionPane.showMessageDialog(null,"Erro");
      }      
        
     
        
    }//GEN-LAST:event_jButton3ActionPerformed

    public void metodoExecutara(){
        listar();
    }
    
    
    
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      
        MessageFormat reader =new MessageFormat("Reuniões");
        
        try{
            jTable1.print(JTable.PrintMode.FIT_WIDTH, reader, null);
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e);
        }
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed
 
        MessageFormat reader =new MessageFormat("Reuniões");
        
        try{
            jTable1.print(JTable.PrintMode.FIT_WIDTH, reader, null);
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e);
        }
        


        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    private void jRadioButtonMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem2ActionPerformed
         listar();
    }//GEN-LAST:event_jRadioButtonMenuItem2ActionPerformed

    private void jRadioButtonMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem4ActionPerformed
   try{
         Connection con = Conexao.fazconexao();
        String sql="select *from usuarios where nome=? and administrador=?";
            PreparedStatement stmt=con.prepareStatement(sql); 
            stmt.setString(1,usu.getText());
            stmt.setString(2,"S");
             ResultSet rs = stmt.executeQuery();
        if(rs.next()){
                  if(a.getText().equals("")){
        JOptionPane.showMessageDialog(null,"Favor Selecionar Uma Linha");}else{
        if(enciartexto == null){
            
    enciartexto=new telan();
           
    enciartexto.setVisible(true);
            setVisible(false);
    enciartexto.recebendo(a.getText(),nomes.getText(),prioridade.getText(),Datainicio.getText(),Horainicio.getText(),horafim.getText(),Equipamento.getText(),salareuniao1.getText(),observacao.getText(),usu.getText());
  listar();
 
    
}else{
    enciartexto.setVisible(true);
    setVisible(false);
    enciartexto.setState(telan.NORMAL);
enciartexto.recebendo(a.getText(),nomes.getText(),prioridade.getText(),Datainicio.getText(),Horainicio.getText(),horafim.getText(),Equipamento.getText(),salareuniao1.getText(),observacao.getText(),usu.getText());  //  nomess.nomes(nomes.getText());
listar();
        }
        
        }
            
        }else{
            JOptionPane.showMessageDialog(null,"O Usuario Não Tem Permição de Acesso a Edição  ");
        }
            
      }catch (SQLException erro ){
          JOptionPane.showMessageDialog(null,"Erro");
      }      
             
         
    }//GEN-LAST:event_jRadioButtonMenuItem4ActionPerformed

    private void jRadioButtonMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem3ActionPerformed
       
        
         try{
         Connection con = Conexao.fazconexao();
        String sql="select *from usuarios where nome=? and administrador=?";
            PreparedStatement stmt=con.prepareStatement(sql); 
            stmt.setString(1,usu.getText());
            stmt.setString(2,"S");
             ResultSet rs = stmt.executeQuery();
        if(rs.next()){
                           
        if (a.getText().equals("")){
    JOptionPane.showMessageDialog(null, "Favor Selecionar Uma Linha Na Tabela");
}else{       
            String msg = "Deseja realmente excluir !?"; 
            int resp = JOptionPane.showConfirmDialog(null, msg, "Confirmação", JOptionPane.YES_NO_OPTION);

                  // excluir registro selecionando pelo ID
                  if (resp == JOptionPane.YES_OPTION) {
        try{
        Connection con1 =Conexao.fazconexao();
        String sql1="delete from alocacao where id=? ";
        PreparedStatement stmt1=con.prepareStatement(sql1);
        
        stmt1.setString(1,a.getText());
        stmt1.execute();
        stmt1.close();
        con.close();
        JOptionPane.showMessageDialog(null, "Excluido!");
          a.setText("");
            listar();
        }catch(SQLException e){
            e.printStackTrace();
        }}}
                      
        }else{
            JOptionPane.showMessageDialog(null,"O Usuario Não Tem Permição de Acesso a Edição  ");
        }
            
      }catch (SQLException erro ){
          JOptionPane.showMessageDialog(null,"Erro");
      }      
        
        
        
        
    }//GEN-LAST:event_jRadioButtonMenuItem3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
     listar();
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(listareuniao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(listareuniao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(listareuniao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(listareuniao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new listareuniao().setVisible(true);
            }
        });
    }
private void Carregar(){
   
    int setor = jTable1.getSelectedRow();
    a.setText(jTable1.getModel().getValueAt(setor,0).toString());
    nomes.setText(jTable1.getModel().getValueAt(setor,1).toString());
    prioridade.setText(jTable1.getModel().getValueAt(setor,2).toString());
    Datainicio.setText(jTable1.getModel().getValueAt(setor,3).toString());
    Horainicio.setText(jTable1.getModel().getValueAt(setor,4).toString());
    horafim.setText(jTable1.getModel().getValueAt(setor,5).toString());
    Equipamento.setText(jTable1.getModel().getValueAt(setor,6).toString());
    salareuniao1.setText(jTable1.getModel().getValueAt(setor,7).toString());
    observacao.setText(jTable1.getModel().getValueAt(setor,8).toString());
    
}
 public void recebendoo(String recebeo){
        usu.setText(recebeo);
     }
 public void excluir(){
     int id;
     id=Integer.parseInt(a.getText());
 }   
    public void excluirf(){
        
    }    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Datainicio;
    private javax.swing.JLabel Equipamento;
    private javax.swing.JLabel Horainicio;
    private javax.swing.JTextField a;
    private javax.swing.JFormattedTextField da;
    private javax.swing.JLabel horafim;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nomes;
    private javax.swing.JLabel observacao;
    private javax.swing.JLabel prioridade;
    private javax.swing.JLabel salareuniao1;
    private javax.swing.JFormattedTextField ta;
    private javax.swing.JLabel usu;
    // End of variables declaration//GEN-END:variables

  
}
