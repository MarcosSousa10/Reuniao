/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cconexao;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author marcos
 */
public class lista extends javax.swing.JFrame {

    /**
     * Creates new form lista
     */
    public lista() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/cconexao/o.png")));
        initComponents();
    listarr();
    jButton4.requestFocus();
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lis = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        a = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        b = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "IDalocacao", "", "Usuarios", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        lis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lisMouseClicked(evt);
            }
        });
        lis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lisKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(lis);
        if (lis.getColumnModel().getColumnCount() > 0) {
            lis.getColumnModel().getColumn(0).setMinWidth(0);
            lis.getColumnModel().getColumn(0).setPreferredWidth(0);
            lis.getColumnModel().getColumn(0).setMaxWidth(0);
            lis.getColumnModel().getColumn(1).setMinWidth(0);
            lis.getColumnModel().getColumn(1).setPreferredWidth(0);
            lis.getColumnModel().getColumn(1).setMaxWidth(0);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 700, 240));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("Excluir Usuario");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 250, 140, 30));

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("Cadastrar");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton4KeyPressed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 250, 100, 30));

        a.setText("jTextField1");
        a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aActionPerformed(evt);
            }
        });
        getContentPane().add(a, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 110, -1, -1));

        jButton5.setFont(new java.awt.Font("Ubuntu", 1, 13)); // NOI18N
        jButton5.setText("Lista reuniões Marcadas ");
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, -1, 30));

        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 120, -1, -1));

        b.setText("Excluir reuniões marcadas ");
        getContentPane().add(b, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cconexao/othon-removebg-preview.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 230, 210));

        jButton1.setFont(new java.awt.Font("Ubuntu", 1, 13)); // NOI18N
        jButton1.setText("Voltar");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 250, 60, 30));

        jButton2.setFont(new java.awt.Font("Ubuntu", 3, 13)); // NOI18N
        jButton2.setText("Excluir Reuniões Marcadas");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 250, 170, 30));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 300));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private void voltar(){
      // TODO add your handling code here:
        try{
        Connection con =Conexao.fazconexao();
        String sql="Select * from usuarios";
        PreparedStatement stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();
            DefaultTableModel modelo = (DefaultTableModel) lis.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                modelo.addRow(new Object[]{
                       rs.getString("IDUSUARIO"),rs.getString("IDUSUARIO"),rs.getString("NOME"),rs.getString("SETOR"),rs.getString("FUNCAO")});
            }
            rs.close();
            con.close();
                }catch(SQLException e){
            try {
                e.printStackTrace();
                Sala_Reuniao te=new Sala_Reuniao();
                te.setVisible(true);
                setVisible(false);
            } catch (SQLException ex) {
                Logger.getLogger(lista.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}
    
    private void listarr(){
      // TODO add your handling code here:
     try{
        Connection con =Conexao.fazconexao();
        String sql="Select * from usuarios";
        PreparedStatement stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();
            DefaultTableModel modelo = (DefaultTableModel) lis.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                modelo.addRow(new Object[]{
                       rs.getString("IDUSUARIO"),rs.getString("IDUSUARIO"),rs.getString("NOME"),rs.getString("SETOR"),rs.getString("FUNCAO")});
            }
            rs.close();
            con.close();
                }catch(SQLException e){
            try {
                e.printStackTrace();
                Sala_Reuniao te=new Sala_Reuniao();
                te.setVisible(true);
                setVisible(false);
            } catch (SQLException ex) {
                Logger.getLogger(lista.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
      
      
      
      /*    try{
        Connection con =Conexao.fazconexao();
        String sql="Select * from usuarios ";
        PreparedStatement stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();
            DefaultTableModel modelo = (DefaultTableModel) lis.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                modelo.addRow(new Object[]{
                                      rs.getString("IDUSUARIO"),rs.getString("NOME"),rs.getString("SETOR"),rs.getString("FUNCAO")});
            }
            rs.close();
            con.close();
                }catch(SQLException e){
            try {
                e.printStackTrace();
                Sala_Reuniao te=new Sala_Reuniao();
                te.setVisible(true);
                setVisible(false);
            } catch (SQLException ex) {
                Logger.getLogger(lista.class.getName()).log(Level.SEVERE, null, ex);
            }
        }*/
} private void removerContato(int ID) throws SQLException {
                  
                  // objeto do tipo CRUD
                  try {  
                  // instrução SQL onde o ? é o parâmetro selecionado para exclusão
                  String SQL = "DELETE FROM usuarios WHERE IDUSUARIO=?";
                  
                  // variáveis para acesso ao BD
                  Connection conex = Conexao.fazconexao();
                  PreparedStatement ps = conex.prepareStatement(SQL);
                            ps.setInt(1,ID);
                           // executa a instrução SQL de exclusão
                           ps.execute();
                            ps.close();
                           
                           
                                    conex.close();
                           
                  } catch (SQLException erro) {
                  
                  
                           // não foi possível localizar o BD
                           JOptionPane.showMessageDialog(null, "O arquivo de BD não foi localizado");
                  }
               //   box ctt = new box();
             //     ctt.removerContato(ID);
                  String msg = "Contato removido com sucesso";
                  JOptionPane.showMessageDialog(null, msg, null, INFORMATION_MESSAGE);
                  
         }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    // TODO add your handling code here:
        janela_cadastro jc=new janela_cadastro();       
       jc.setVisible(true);
        setVisible(false);
           listarr();
           // TODO add your handling code here:
   /*     if(pesquisa.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Informe o ID");
        }else{
        try{
        Connection con = Conexao.fazconexao();
        String sql="select *from usuarios where nome like ?";
        PreparedStatement stmt = con.prepareStatement(sql);
        stmt.setString(1, "%"+pesquisa.getText());
            ResultSet rs = stmt.executeQuery();
            while (rs.next()){
         ///  id.setText(rs.getString("id"));
       //         usuario.setText(rs.getString("usuario"));
         //       senha.setText(rs.getString("senha"));
            //   JPasswordField a=senha;
            //   senhaa=a;
                rs.close();
                con.close();*/        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void lisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lisMouseClicked
int linha =lis.getSelectedRow(); 
  try {
                 
                 String sql="select *from usuarios where idusuario="+lis.getValueAt(linha,0);
                 java.sql.Connection conn = Conexao.fazconexao();
               Statement st= conn.createStatement();
                 ResultSet rs = st.executeQuery(sql);
                         rs.next();
         this.a.setText(rs.getString("IDUSUARIO"));
          int setor = lis.getSelectedRow();
    b.setText(lis.getModel().getValueAt(setor,1).toString());
  }catch(SQLException e){
            String msg = "Nenhum contato selecionado";
            JOptionPane.showMessageDialog(null,msg,"ERROR",ERROR_MESSAGE);
             
           
                                     
             
 
 }
 
    //b.setText(lis.getModel().getValueAt(linha,1).toString());
    }//GEN-LAST:event_lisMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if (a.getText().equals("")){
    JOptionPane.showMessageDialog(null, "Favor Selecionar Uma Linha Na Tabela");
}else {      String msg = "Deseja Realmente a Linha selecionado !?";
                  int resp = JOptionPane.showConfirmDialog(null, msg, "Confirmação", JOptionPane.YES_NO_OPTION);

                  // excluir registro selecionando pelo ID
                  if (resp == JOptionPane.YES_OPTION) {
                     
        try{
        Connection con =Conexao.fazconexao();
        String sql="delete from usuarios where idusuario=? ";
        PreparedStatement stmt=con.prepareStatement(sql);
        
        stmt.setString(1,a.getText());
        stmt.execute();
        stmt.close();
        con.close();
        JOptionPane.showMessageDialog(null, "Excluido!");
          a.setText("");
            listarr();
        }catch(SQLException e){          
            
            
//          e.printStackTrace();
        }}}     //ad();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed
if (evt.getKeyCode()==evt.VK_ENTER){
        janela_cadastro jc=new janela_cadastro();
      
        
       jc.setVisible(true);
        setVisible(false);
    }    }//GEN-LAST:event_jButton4KeyPressed

    private void lisKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lisKeyPressed
        // TODO add your handling code here:
    int setor = lis.getSelectedRow();
    a.setText(lis.getModel().getValueAt(setor,0).toString());
}
 public void excluir(){
     int id;
     id=Integer.parseInt(a.getText());
 }   
    public void excluirf(){
        
            // TODO add your handling code here:
    }//GEN-LAST:event_lisKeyPressed

    private void aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
          try{
        Connection con =Conexao.fazconexao();
  
        String sql="select usuarios.idusuario as ida, alocacao.ID as ID,usuarios.nome as batman,alocacao.PRIORIDADE as PRIORIDADE,alocacao.DATAINICIO as DATAINICIO,alocacao.HORAINICIO as HORAINICIO,alocacao.HORAFIM as HORAFIM from usuarios inner join alocacao on usuarios.idusuario = alocacao.idusuario where usuarios.idusuario=?";
             PreparedStatement stmt=con.prepareStatement(sql);
             stmt.setString(1,a.getText());
        ResultSet rs = stmt.executeQuery();
            DefaultTableModel modelo = (DefaultTableModel) lis.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                modelo.addRow(new Object[]{
           //           rs.getString("batman"),rs.getString("ID"),rs.getString("PRIORIDADE"),rs.getString("DATAINICIO"),rs.getString("DATAFIM"),rs.getString("HORAINICIO"),rs.getString("HORAFIM"),rs.getString("ASSUNTO")});
                     rs.getString("ida"),rs.getString("ID"),rs.getString("batman"),rs.getString("DATAINICIO"),rs.getString("HORAINICIO"),rs.getString("HORAFIM")});
            }
            rs.close();
            con.close();
                }catch(SQLException e){
            e.printStackTrace();
        }
        
        
        
        
    }//GEN-LAST:event_jButton5ActionPerformed
public void asdad(){
      try{
        Connection con =Conexao.fazconexao();
  
        String sql="select usuarios.idusuario as ida, alocacao.ID as ID,usuarios.nome as batman,alocacao.PRIORIDADE as PRIORIDADE,alocacao.DATAINICIO as DATAINICIO,alocacao.HORAINICIO as HORAINICIO,alocacao.HORAFIM as HORAFIM from usuarios inner join alocacao on usuarios.idusuario = alocacao.idusuario where usuarios.idusuario=?";
             PreparedStatement stmt=con.prepareStatement(sql);
             stmt.setString(1,a.getText());
        ResultSet rs = stmt.executeQuery();
            DefaultTableModel modelo = (DefaultTableModel) lis.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                modelo.addRow(new Object[]{
           //           rs.getString("batman"),rs.getString("ID"),rs.getString("PRIORIDADE"),rs.getString("DATAINICIO"),rs.getString("DATAFIM"),rs.getString("HORAINICIO"),rs.getString("HORAFIM"),rs.getString("ASSUNTO")});
                     rs.getString("ida"),rs.getString("ID"),rs.getString("batman"),rs.getString("DATAINICIO"),rs.getString("HORAINICIO"),rs.getString("HORAFIM")});
            }
            rs.close();
            con.close();
                }catch(SQLException e){
            e.printStackTrace();
        }
        
}
    
    public void ad(){
        try{
        Connection con =Conexao.fazconexao();
  
        String sql="select usuarios.idusuario as ida, alocacao.ID as ID,usuarios.nome as batman,alocacao.PRIORIDADE as PRIORIDADE,alocacao.DATAINICIO as DATAINICIO,alocacao.HORAINICIO as HORAINICIO,alocacao.HORAFIM as HORAFIM from usuarios inner join alocacao on usuarios.idusuario = alocacao.idusuario where usuarios.idusuario=?";
             PreparedStatement stmt=con.prepareStatement(sql);
             stmt.setString(1,a.getText());
        ResultSet rs = stmt.executeQuery();
            DefaultTableModel modelo = (DefaultTableModel) lis.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                modelo.addRow(new Object[]{
           //           rs.getString("batman"),rs.getString("ID"),rs.getString("PRIORIDADE"),rs.getString("DATAINICIO"),rs.getString("DATAFIM"),rs.getString("HORAINICIO"),rs.getString("HORAFIM"),rs.getString("ASSUNTO")});
                     rs.getString("ida"),rs.getString("ID"),rs.getString("batman"),rs.getString("DATAINICIO"),rs.getString("HORAINICIO"),rs.getString("HORAFIM")});
            }
            rs.close();
            con.close();
                }catch(SQLException e){
            e.printStackTrace();
        }
        
}
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
          
        if (a.getText().equals("")){
    JOptionPane.showMessageDialog(null, "Favor Selecionar Uma Linha Na Tabela");
}else{       
            String msg = "Deseja realmente excluir !?"; 
            int resp = JOptionPane.showConfirmDialog(null, msg, "Confirmação", JOptionPane.YES_NO_OPTION);

                  // excluir registro selecionando pelo ID
                  if (resp == JOptionPane.YES_OPTION) {
        try{
        Connection con =Conexao.fazconexao();
        String sql="delete from alocacao where id=? ";
        PreparedStatement stmt=con.prepareStatement(sql);
        
        stmt.setString(1,b.getText());
        stmt.execute();
        stmt.close();
        con.close();
        JOptionPane.showMessageDialog(null, "Excluido!");
          a.setText("");
        }catch(SQLException e){
            e.printStackTrace();
        }}}
        
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       listarr();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       if (b.getText().equals("")){
    JOptionPane.showMessageDialog(null, "Favor Selecionar Uma Linha Na Tabela");
}else{  

                    try {
                        // excluir registro selecionando pelo ID
                        
                        
                        Connection con1 =Conexao.fazconexao();
                        String sql1="delete from alocacao where id=? ";
                        PreparedStatement stmt1=con1.prepareStatement(sql1);
                        
                        stmt1.setString(1,b.getText());
                        stmt1.execute();
                        stmt1.close();
                        con1.close();
                        JOptionPane.showMessageDialog(null, "Excluido!");
                        b.setText("");
                           
                           asdad();
                    } catch (SQLException ex) {
                        Logger.getLogger(lista.class.getName()).log(Level.SEVERE, null, ex);
                    }
        
        
                }
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(lista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(lista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(lista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(lista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new lista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a;
    private javax.swing.JTextField b;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable lis;
    // End of variables declaration//GEN-END:variables
}
