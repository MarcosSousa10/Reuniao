package cconexao;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;
import javax.swing.text.html.HTML;

/**
 *
 * @author marcos
 */
public class Sala_Reuniao extends javax.swing.JFrame {
    
    reuniaoo enciartexto;
    Equipamento enciartext;
    listareuniao enviartexto;
    telan tela;
    /**
     * Creates new form Sala_Reuniao
     */
    public Sala_Reuniao() throws SQLException {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/cconexao/o.png")));
        initComponents();
        listarCargo();
        da.requestFocus();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        baixa = new javax.swing.JRadioButton();
        media = new javax.swing.JRadioButton();
        alta = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        note = new javax.swing.JRadioButton();
        sem = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        auditorio = new javax.swing.JRadioButton();
        sexto = new javax.swing.JRadioButton();
        segundo = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        usu = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        salvar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        gambiarra = new javax.swing.JTextField();
        prioridade = new javax.swing.JTextField();
        entreequipamento1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        sala1 = new javax.swing.JTextField();
        dade = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        da = new javax.swing.JFormattedTextField();
        box = new javax.swing.JComboBox<>();
        e1 = new javax.swing.JFormattedTextField();
        s = new javax.swing.JFormattedTextField();
        assunto = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem4 = new javax.swing.JRadioButtonMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Bodoni MT", 3, 18)); // NOI18N
        jLabel1.setText("Nome");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Bodoni MT", 3, 18)); // NOI18N
        jLabel2.setText("É Necessario Equipamentos");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 430, -1, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButton1.setText("Listar Todos");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setMargin(new java.awt.Insets(10, 20, 20, 14));
        jButton1.setMaximumSize(new java.awt.Dimension(20, 0));
        jButton1.setMinimumSize(new java.awt.Dimension(0, 40));
        jButton1.setNextFocusableComponent(alta);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 650, 110, 40));

        buttonGroup1.add(baixa);
        baixa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        baixa.setText("Baixa");
        getContentPane().add(baixa, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 670, -1, -1));

        buttonGroup1.add(media);
        media.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        media.setText("Media");
        getContentPane().add(media, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 670, -1, -1));

        buttonGroup1.add(alta);
        alta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        alta.setText("Alta");
        getContentPane().add(alta, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 670, -1, -1));

        jLabel3.setFont(new java.awt.Font("Bodoni MT", 3, 18)); // NOI18N
        jLabel3.setText("Horario De Saida");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 370, -1, -1));

        buttonGroup3.add(note);
        note.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        note.setText("Notebook");
        note.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noteActionPerformed(evt);
            }
        });
        note.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                noteKeyPressed(evt);
            }
        });
        getContentPane().add(note, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 460, -1, -1));

        buttonGroup3.add(sem);
        sem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sem.setText("Sem necessidade");
        sem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semActionPerformed(evt);
            }
        });
        getContentPane().add(sem, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 460, -1, -1));

        jLabel5.setFont(new java.awt.Font("Bodoni MT Condensed", 3, 18)); // NOI18N
        jLabel5.setText("Favor Informar o Nivel de Prioridade");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 610, -1, -1));

        buttonGroup2.add(auditorio);
        auditorio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        auditorio.setText("Auditorio");
        auditorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                auditorioActionPerformed(evt);
            }
        });
        auditorio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                auditorioKeyPressed(evt);
            }
        });
        getContentPane().add(auditorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 240, -1, -1));

        buttonGroup2.add(sexto);
        sexto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sexto.setText("Sala De Reunião Do 6°Andar");
        sexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sextoActionPerformed(evt);
            }
        });
        sexto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sextoKeyPressed(evt);
            }
        });
        getContentPane().add(sexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, -1, -1));

        buttonGroup2.add(segundo);
        segundo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        segundo.setText("Sala De Reunião do 2° Andar ");
        segundo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                segundoActionPerformed(evt);
            }
        });
        segundo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                segundoKeyPressed(evt);
            }
        });
        getContentPane().add(segundo, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, -1, -1));

        jLabel6.setFont(new java.awt.Font("Bodoni MT Condensed", 3, 18)); // NOI18N
        jLabel6.setText("Sala Para Reunião");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, -1, -1));

        usu.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        usu.setText("administrador");
        getContentPane().add(usu, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 0, 130, 20));

        jLabel7.setFont(new java.awt.Font("Bodoni MT", 3, 18)); // NOI18N
        jLabel7.setText("Data");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, -1, -1));

        jLabel9.setFont(new java.awt.Font("Bodoni MT", 3, 18)); // NOI18N
        jLabel9.setText("Horario De Entrada");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, -1, -1));

        salvar.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        salvar.setText("Salvar");
        salvar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        salvar.setMargin(new java.awt.Insets(10, 20, 20, 14));
        salvar.setMaximumSize(new java.awt.Dimension(20, 0));
        salvar.setMinimumSize(new java.awt.Dimension(0, 40));
        salvar.setNextFocusableComponent(alta);
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });
        salvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                salvarKeyPressed(evt);
            }
        });
        getContentPane().add(salvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 650, 90, 40));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cconexao/verdadeiro-removebg-preview.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 40, 390, 510));

        gambiarra.setText("jTextField1");
        getContentPane().add(gambiarra, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 130, -1, 80));

        prioridade.setText("jTextField1");
        getContentPane().add(prioridade, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 130, -1, 80));

        entreequipamento1.setText("jTextField1");
        getContentPane().add(entreequipamento1, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 120, -1, 80));

        jButton2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButton2.setText("Logoff");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setMargin(new java.awt.Insets(10, 20, 20, 14));
        jButton2.setMaximumSize(new java.awt.Dimension(20, 0));
        jButton2.setMinimumSize(new java.awt.Dimension(0, 40));
        jButton2.setNextFocusableComponent(alta);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 650, 100, 40));

        sala1.setText("jTextField1");
        getContentPane().add(sala1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 120, -1, 80));
        getContentPane().add(dade, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 200, -1, 80));

        jLabel10.setFont(new java.awt.Font("Bodoni MT", 3, 18)); // NOI18N
        jLabel10.setText("Assunto");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 510, -1, -1));

        da.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        try {
            da.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        da.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        da.setName(""); // NOI18N
        da.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daActionPerformed(evt);
            }
        });
        da.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                daKeyPressed(evt);
            }
        });
        getContentPane().add(da, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 200, -1));

        box.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));
        box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxActionPerformed(evt);
            }
        });
        box.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                boxKeyPressed(evt);
            }
        });
        getContentPane().add(box, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 340, 20));

        e1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        try {
            e1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        e1.setToolTipText("");
        e1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                e1KeyPressed(evt);
            }
        });
        getContentPane().add(e1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 170, -1));

        s.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        try {
            s.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        s.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sKeyPressed(evt);
            }
        });
        getContentPane().add(s, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, 170, 20));

        assunto.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        assunto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        assunto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                assuntoKeyPressed(evt);
            }
        });
        getContentPane().add(assunto, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 540, 980, 60));

        jButton3.setFont(new java.awt.Font("Ubuntu", 1, 13)); // NOI18N
        jButton3.setText("Checar");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 60, 30));

        jButton4.setFont(new java.awt.Font("Ubuntu", 1, 13)); // NOI18N
        jButton4.setText("Checar");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 490, 60, 30));

        jMenu1.setText("File");

        jRadioButtonMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("Salvar");
        jRadioButtonMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jRadioButtonMenuItem2);

        jRadioButtonMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jRadioButtonMenuItem3.setSelected(true);
        jRadioButtonMenuItem3.setText("Listar");
        jRadioButtonMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jRadioButtonMenuItem3);

        jRadioButtonMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("Cadastro");
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jRadioButtonMenuItem1);

        jRadioButtonMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jRadioButtonMenuItem4.setSelected(true);
        jRadioButtonMenuItem4.setText("logoff");
        jRadioButtonMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jRadioButtonMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void recebendo(String recebe) {
        usu.setText(recebe);
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
    try {
        // TODO add your handling code here:
        funcaoa();
      
    } catch (SQLException ex) {
        Logger.getLogger(Sala_Reuniao.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed

        salvarreuniao();
      
    }//GEN-LAST:event_salvarActionPerformed

    
    public void salvarreuniao(){
      if (assunto.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Favor preencher os campos");
        } else {

            String m = "";
            String a = "";
            String b = "";
            if (note.isSelected()) {
                a = "Notebook";
                try {
                    Connection con = Conexao.fazconexao();
                    String sql = "select *from alocacao where EQUIPAMENTO=? and DATAINICIO=? AND (HORAINICIO BETWEEN ? AND ? ) and (HORAFIM BETWEEN ? AND ?) OR EQUIPAMENTO=? and DATAINICIO=? AND (HORAINICIO BETWEEN ? AND ? ) OR EQUIPAMENTO=? and DATAINICIO=? AND (HORAFIM BETWEEN ? AND ? )";
                    PreparedStatement stmt = con.prepareStatement(sql);
                    stmt.setString(1, "Notebook");

                    String dia = da.getText().substring(0, 2);
                    String mes = da.getText().substring(3, 5);
                    String ano = da.getText().substring(6);
                    String my = ano + "-" + mes + "-" + dia;
                    stmt.setObject(2, my);
                    stmt.setString(3, e1.getText());
                    stmt.setString(4, s.getText());
                    stmt.setString(5, e1.getText());
                    stmt.setString(6, s.getText());
                    stmt.setString(7, "Notebook");
                    stmt.setString(8, my);
                    stmt.setString(9, e1.getText());
                    stmt.setString(10, s.getText());
                    stmt.setString(11, "Notebook");
                    stmt.setString(12, my);
                    stmt.setString(13, e1.getText());
                    stmt.setString(14, s.getText());

                    ResultSet rs = stmt.executeQuery();
                    if (rs.next()) {

                        JOptionPane.showMessageDialog(null, "equipamento em uso");
                        assunto.setText("");
                    } else {

                        String sql1 = "select *from alocacao where EQUIPAMENTO=? and DATAINICIO=? AND HORAINICIO>=? AND HORAFIM <=?";
                        PreparedStatement stmt1 = con.prepareStatement(sql1);
                        stmt1.setString(1, "Notebook");

                        String dia2 = da.getText().substring(0, 2);
                        String mes2 = da.getText().substring(3, 5);
                        String ano2 = da.getText().substring(6);
                        String my2 = ano2 + "-" + mes2 + "-" + dia2;
                        stmt1.setObject(2, my2);
                        stmt1.setString(3, e1.getText());
                        stmt1.setString(4, s.getText());

                        ResultSet rs1 = stmt1.executeQuery();
                        if (rs1.next()) {

                            JOptionPane.showMessageDialog(null, "equipamento em uso");
                            assunto.setText("");

                        } else {
                            String sql2 = "select *from alocacao where equipamento=? and datainicio=? and (horainicio<=? and horafim>=?) ";

                            PreparedStatement stmt2 = con.prepareStatement(sql2);
                            stmt2.setString(1, "Notebook");

                            String dia3 = da.getText().substring(0, 2);
                            String mes3 = da.getText().substring(3, 5);
                            String ano3 = da.getText().substring(6);
                            String my3 = ano3 + "-" + mes3 + "-" + dia3;
                            stmt2.setObject(2, my2);
                            stmt2.setString(3, e1.getText());
                            stmt2.setString(4, s.getText());

                            ResultSet rs2 = stmt2.executeQuery();
                            if (rs2.next()) {

                                JOptionPane.showMessageDialog(null, "equipamento em uso");
                                assunto.setText("");

                            } else {

                                reuniao();

                            }
                        }
                    }
                } catch (SQLException erro) {
                    JOptionPane.showMessageDialog(null, erro + "media");
                }
            } else {
                reuniao();

            }
        }
        repaint();
        validate();

     
     
 }
    
    
    
    
    
    
    
    
    public void funcaoa() throws SQLException {
        if (enviartexto == null) {
            enviartexto = new listareuniao();
            enviartexto.setVisible(true);
            enviartexto.relogio();
            enviartexto.recebendoo(usu.getText());

        } else {
            enviartexto.setVisible(true);
            enviartexto.setState(Sala_Reuniao.NORMAL);
            enviartexto.recebendoo(usu.getText());
            enviartexto.relogio();

        }
    }
    


    public void reuniao() {
        if (prioridade.equals("")) {
            JOptionPane.showMessageDialog(null, "selecionar uma sala de reunião");
        } else {

            String m = "";
            String a = "";
            String b = "";
            if (!prioridade.equals("")) {
                try {
                    Connection con = Conexao.fazconexao();
                    String sql = "select *from alocacao where SALAREUNIAO=? and DATAINICIO=? AND (HORAINICIO BETWEEN ? AND ? ) and (HORAFIM BETWEEN ? AND ?) OR SALAREUNIAO=? and DATAINICIO=? AND (HORAINICIO BETWEEN ? AND ? ) OR SALAREUNIAO=? and DATAINICIO=? AND (HORAFIM BETWEEN ? AND ? )";
                    PreparedStatement stmt = con.prepareStatement(sql);
                    stmt.setString(1, prioridade.getText());
                    String dia = da.getText().substring(0, 2);
                    String mes = da.getText().substring(3, 5);
                    String ano = da.getText().substring(6);
                    String my = ano + "-" + mes + "-" + dia;
                    stmt.setObject(2, my);
                    stmt.setString(3, e1.getText());
                    stmt.setString(4, s.getText());
                    stmt.setString(5, e1.getText());
                    stmt.setString(6, s.getText());
                    stmt.setString(7, prioridade.getText());
                    stmt.setString(8, my);
                    stmt.setString(9, e1.getText());
                    stmt.setString(10, s.getText());
                    stmt.setString(11, prioridade.getText());
                    stmt.setString(12, my);
                    stmt.setString(13, e1.getText());
                    stmt.setString(14, s.getText());

                    ResultSet rs = stmt.executeQuery();
                    if (rs.next()) {

                        JOptionPane.showMessageDialog(null, "sala em uso");
                        assunto.setText("");
                    } else {

                        String sql1 = "select *from alocacao where SALAREUNIAO=? and DATAINICIO=? AND HORAINICIO>=? AND HORAFIM <=?";
                        PreparedStatement stmt1 = con.prepareStatement(sql1);
                        stmt1.setString(1, prioridade.getText());
                        String dia2 = da.getText().substring(0, 2);
                        String mes2 = da.getText().substring(3, 5);
                        String ano2 = da.getText().substring(6);
                        String my2 = ano2 + "-" + mes2 + "-" + dia2;
                        stmt1.setObject(2, my2);
                        stmt1.setString(3, e1.getText());
                        stmt1.setString(4, s.getText());

                        ResultSet rs1 = stmt1.executeQuery();
                        if (rs1.next()) {

                            JOptionPane.showMessageDialog(null, "sala de reunião em uso");
                            assunto.setText("");

                        } else {
                            String sql2 = "select *from alocacao where SALAREUNIAO=? and datainicio=? and (horainicio<=? and horafim>=?) ";

                            PreparedStatement stmt2 = con.prepareStatement(sql2);
                            stmt2.setString(1, prioridade.getText());
                            String dia3 = da.getText().substring(0, 2);
                            String mes3 = da.getText().substring(3, 5);
                            String ano3 = da.getText().substring(6);
                            String my3 = ano3 + "-" + mes3 + "-" + dia3;
                            stmt2.setObject(2, my2);
                            stmt2.setString(3, e1.getText());
                            stmt2.setString(4, s.getText());

                            ResultSet rs2 = stmt2.executeQuery();
                            if (rs2.next()) {

                                JOptionPane.showMessageDialog(null, "sala reuniao  em uso");
                                assunto.setText("");

                            } else {

                                salvarrr();

                            }
                        }
                    }
                } catch (SQLException erro) {
                    JOptionPane.showMessageDialog(null, erro + "media");
                }
            } else {
                salvarrr();
            }
        }
    }

    public void notebook() {
        if (assunto.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Favor preencher os campos");
        } else {

            String m = "";
            String a = "";
            String b = "";
            if (note.isSelected()) {
                a = "Notebook";
                try {
                    Connection con = Conexao.fazconexao();
                    String sql = "select *from alocacao where EQUIPAMENTO=? and DATAINICIO=? AND (HORAINICIO BETWEEN ? AND ? ) and (HORAFIM BETWEEN ? AND ?) OR EQUIPAMENTO=? and DATAINICIO=? AND (HORAINICIO BETWEEN ? AND ? ) OR EQUIPAMENTO=? and DATAINICIO=? AND (HORAFIM BETWEEN ? AND ? )";
                    PreparedStatement stmt = con.prepareStatement(sql);
                    stmt.setString(1, "Notebook");

                    String dia = da.getText().substring(0, 2);
                    String mes = da.getText().substring(3, 5);
                    String ano = da.getText().substring(6);
                    String my = ano + "-" + mes + "-" + dia;
                    stmt.setObject(2, my);
                    stmt.setString(3, e1.getText());
                    stmt.setString(4, s.getText());
                    stmt.setString(5, e1.getText());
                    stmt.setString(6, s.getText());
                    stmt.setString(7, "Notebook");
                    stmt.setString(8, my);
                    stmt.setString(9, e1.getText());
                    stmt.setString(10, s.getText());
                    stmt.setString(11, "Notebook");
                    stmt.setString(12, my);
                    stmt.setString(13, e1.getText());
                    stmt.setString(14, s.getText());

                    ResultSet rs = stmt.executeQuery();
                    if (rs.next()) {

                        JOptionPane.showMessageDialog(null, "equipamento em uso");
                        assunto.setText("");
                    } else {

                        String sql1 = "select *from alocacao where EQUIPAMENTO=? and DATAINICIO=? AND HORAINICIO>=? AND HORAFIM <=?";
                        PreparedStatement stmt1 = con.prepareStatement(sql1);
                        stmt1.setString(1, "Notebook");

                        String dia2 = da.getText().substring(0, 2);
                        String mes2 = da.getText().substring(3, 5);
                        String ano2 = da.getText().substring(6);
                        String my2 = ano2 + "-" + mes2 + "-" + dia2;
                        stmt1.setObject(2, my2);
                        stmt1.setString(3, e1.getText());
                        stmt1.setString(4, s.getText());

                        ResultSet rs1 = stmt1.executeQuery();
                        if (rs1.next()) {

                            JOptionPane.showMessageDialog(null, "equipamento em uso");
                            assunto.setText("");

                        } else {
                            String sql2 = "select *from alocacao where equipamento=? and datainicio=? and (horainicio<=? and horafim>=?) ";

                            PreparedStatement stmt2 = con.prepareStatement(sql2);
                            stmt2.setString(1, "Notebook");

                            String dia3 = da.getText().substring(0, 2);
                            String mes3 = da.getText().substring(3, 5);
                            String ano3 = da.getText().substring(6);
                            String my3 = ano3 + "-" + mes3 + "-" + dia3;
                            stmt2.setObject(2, my2);
                            stmt2.setString(3, e1.getText());
                            stmt2.setString(4, s.getText());

                            ResultSet rs2 = stmt2.executeQuery();
                            if (rs2.next()) {

                                JOptionPane.showMessageDialog(null, "equipamento em uso");
                                assunto.setText("");

                            } else {

                                salvarrr();

                            }
                        }
                    }
                } catch (SQLException erro) {
                    JOptionPane.showMessageDialog(null, erro + "media");
                }
            } else {
                salvarrr();
            }
        }

    }

    public void salvarrr() {

        if (assunto.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Favor preencher os campos");
        } else {

            String m = "";
            String a = "";
            String b = "";
            if (note.isSelected()) {
                a = "Notebook";
            } else if (sem.isSelected()) {
                a = "Sem necessidade";
            }
            if (baixa.isSelected()) {
                b = "Baixa";
            } else if (media.isSelected()) {
                b = "Media";
            } else if (alta.isSelected()) {
                b = "Alta";

            }
            if (sexto.isSelected()) {
                m = "6° Andar";

            } else if (segundo.isSelected()) {
                m = "2° Andar";
            } else if (auditorio.isSelected()) {
                m = "Auditorio";
            }

            gambiarra.setText(a);
            prioridade.setText(m);
            dade.setText(b);
            try {
                Connection con = Conexao.fazconexao();
                String sql = "insert into alocacao (IDUSUARIO,PRIORIDADE,DATAINICIO,HORAINICIO,HORAFIM,ASSUNTO,EQUIPAMENTO,SALAREUNIAO)values(?,?,?,?,?,?,?,?)";
                PreparedStatement stmt = con.prepareStatement(sql);
                int combobox;
                combobox = idu.get(box.getSelectedIndex() - 1);
                stmt.setInt(1, combobox);
                // stmt.setString(1,nome2.getText());
                stmt.setString(2, dade.getText());
                String dia = da.getText().substring(0, 2);
                String mes = da.getText().substring(3, 5);
                String ano = da.getText().substring(6);
                String my = ano + "-" + mes + "-" + dia;
                //  stmt.setObject(3,da.getText());
                stmt.setObject(3, my);
                stmt.setString(4, e1.getText());
                stmt.setString(5, s.getText());
                stmt.setString(6, assunto.getText());
                stmt.setString(7, gambiarra.getText());
                stmt.setString(8, prioridade.getText());
                stmt.execute();
                stmt.close();
                con.close();
                JOptionPane.showMessageDialog(null, "Operação Realizada com Sucesso");
                assunto.setText("");
                da.setText("");
                e1.setText("");
                s.setText("");
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        login l = new login();
        l.setVisible(true);
        setVisible(false);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed
        try {
            Connection con = Conexao.fazconexao();
            String sql = "select *from usuarios where nome=? and administrador=?";
            PreparedStatement stmt = con.prepareStatement(sql);
            stmt.setString(1, usu.getText());
            stmt.setString(2, "S");
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                lista exibir = new lista();
                exibir.setVisible(true);

            } else {
                JOptionPane.showMessageDialog(null, "O Usuario Não Tem Permição de Acesso ao Cadastro  ");
            }

        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro");
        }


    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    private void boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxActionPerformed

    }//GEN-LAST:event_boxActionPerformed

    private void jRadioButtonMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem2ActionPerformed
        if (assunto.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Favor preencher os campos");
        } else {

            String m = "";
            String a = "";
            String b = "";
            if (note.isSelected()) {
                a = "Notebook";
            } else if (sem.isSelected()) {
                a = "Sem necessidade";
            }
            if (baixa.isSelected()) {
                b = "Baixa";
            } else if (media.isSelected()) {
                b = "Media";
            } else if (alta.isSelected()) {
                b = "Alta";

            }
            if (sexto.isSelected()) {
                m = "6° Andar";

            } else if (segundo.isSelected()) {
                m = "2° Andar";
            } else if (auditorio.isSelected()) {
                m = "Auditorio";
            }
            try {
                Connection con = Conexao.fazconexao();
                String sql = "select *from alocacao where EQUIPAMENTO=?";
                PreparedStatement stmt = con.prepareStatement(sql);
                stmt.setString(1, "Notebook");
                ResultSet rs = stmt.executeQuery();
                if (rs.next()) {
                    JOptionPane.showMessageDialog(null, "Notebook Ja Esta em Uso");
                } else {
                    gambiarra.setText(a);
                    prioridade.setText(m);
                    dade.setText(b);
                    try {

                        String sql1 = "insert into alocacao (IDUSUARIO,PRIORIDADE,DATAINICIO,HORAINICIO,HORAFIM,ASSUNTO,EQUIPAMENTO,SALAREUNIAO)values(?,?,?,?,?,?,?,?)";
                        PreparedStatement stmt1 = con.prepareStatement(sql1);
                        int combobox;
                        combobox = idu.get(box.getSelectedIndex() - 1);
                        stmt1.setInt(1, combobox);
                        stmt1.setString(2, dade.getText());
                        String dia = da.getText().substring(0, 2);
                        String mes = da.getText().substring(3, 5);
                        String ano = da.getText().substring(6);
                        String my = ano + "-" + mes + "-" + dia;
                        //  stmt.setObject(3,da.getText());
                        stmt1.setObject(3, my);
                        stmt1.setString(4, e1.getText());
                        stmt1.setString(5, s.getText());
                        stmt1.setString(6, assunto.getText());
                        stmt1.setString(7, gambiarra.getText());
                        stmt1.setString(8, prioridade.getText());
                        stmt1.execute();
                        stmt1.close();
                        con.close();
                        JOptionPane.showMessageDialog(null, "Operação Realizada com Sucesso");

                    } catch (SQLException e) {
                        e.printStackTrace();
                    }

                }

            } catch (SQLException e) {
            }


          }    }//GEN-LAST:event_jRadioButtonMenuItem2ActionPerformed

    private void daActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_daActionPerformed

    private void boxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boxKeyPressed

    }//GEN-LAST:event_boxKeyPressed

    private void sextoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sextoKeyPressed

                             }//GEN-LAST:event_sextoKeyPressed

    private void segundoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_segundoKeyPressed


    }//GEN-LAST:event_segundoKeyPressed

    private void auditorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_auditorioActionPerformed
        if (auditorio.isSelected()) {
            prioridade.setText("Auditorio");

        }
                da.requestFocus();    }//GEN-LAST:event_auditorioActionPerformed

    private void auditorioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_auditorioKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_auditorioKeyPressed

    private void daKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_daKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            e1.requestFocus();
        }


    }//GEN-LAST:event_daKeyPressed

    private void noteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noteKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {


        sem.requestFocus();    }//GEN-LAST:event_noteKeyPressed
    }
    private void salvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salvarKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER);
        this.salvarrr();
        jButton1.requestFocus();
}//GEN-LAST:event_salvarKeyPressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER);
        // TODO add your handling code here:
       /* listareuniao lr = new listareuniao();
        lr.setVisible(true);
        setVisible(false);*/
    }//GEN-LAST:event_jButton1KeyPressed

    private void e1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e1KeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            s.requestFocus();
        }


    }//GEN-LAST:event_e1KeyPressed

    private void sKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            assunto.requestFocus();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_sKeyPressed

    private void assuntoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_assuntoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            salvar.requestFocus();
            repaint();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_assuntoKeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        try {
            Connection con = Conexao.fazconexao();
            String sql = "select usuarios.nome as nome,alocacao.PRIORIDADE as PRIORIDADE,alocacao.DATAINICIO as DATAINICIO,alocacao.HORAINICIO as HORAINICIO,alocacao.HORAFIM as HORAFIM, alocacao.EQUIPAMENTO as EQUIPAMENTO,alocacao.SALAREUNIAO as SALAREUNIAO,alocacao.ASSUNTO as ASSUNTO from alocacao inner join usuarios on usuarios.idusuario = alocacao.idusuario where DATAINICIO= ? and SALAREUNIAO=?";

            PreparedStatement stmt = con.prepareStatement(sql);
            // stmt.setTime(1,da);
            String dia = da.getText().substring(0, 2);
            String mes = da.getText().substring(3, 5);
            String ano = da.getText().substring(6);
            String my = ano + "-" + mes + "-" + dia;
            stmt.setObject(1, my);
            stmt.setString(2, prioridade.getText());
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                if (enciartexto == null) {
                    enciartexto = new reuniaoo();
                    enciartexto.setVisible(true);
                    enciartexto.recebendo(da.getText(), prioridade.getText());

                } else {
                    enciartexto.setVisible(true);
                    enciartexto.setState(reuniaoo.NORMAL);
                    enciartexto.recebendo(da.getText(), prioridade.getText());
                }
            } else if (!rs.next()) {
                JOptionPane.showMessageDialog(null, "Não a Reunião Marcada Nesta Data e Sala");
            }

            rs.close();
            con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }

        if (da.getText().equals("")) {

            JOptionPane.showMessageDialog(null, "Não a Reunião Marcada");

        } else {

        }

        /* reuniaoo ad=new reuniaoo();
 ad.setVisible(true);*/
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            Connection con = Conexao.fazconexao();
            String sql = "select usuarios.nome as batman,alocacao.PRIORIDADE as PRIORIDADE,alocacao.DATAINICIO as DATAINICIO,alocacao.HORAINICIO as HORAINICIO,alocacao.HORAFIM as HORAFIM, alocacao.EQUIPAMENTO as EQUIPAMENTO,alocacao.SALAREUNIAO as SALAREUNIAO,alocacao.ASSUNTO as ASSUNTO from alocacao inner join usuarios on usuarios.idusuario = alocacao.idusuario where DATAINICIO= ? and EQUIPAMENTO=?";
            PreparedStatement stmt = con.prepareStatement(sql);
            // stmt.setTime(1,da);
            String dia = da.getText().substring(0, 2);
            String mes = da.getText().substring(3, 5);
            String ano = da.getText().substring(6);
            String my = ano + "-" + mes + "-" + dia;
            stmt.setObject(1, my);
            stmt.setString(2, gambiarra.getText());

            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                if (enciartext == null) {
                    enciartext = new Equipamento();
                    enciartext.setVisible(true);
                    enciartext.recebendo(da.getText(), gambiarra.getText());

                } else {
                    enciartext.setVisible(true);
                    enciartext.setState(Equipamento.NORMAL);
                    enciartext.recebendo(da.getText(), gambiarra.getText());
                }
            } else if (!rs.next()) {
                JOptionPane.showMessageDialog(null, "Não a Reunião Marcada Nesta Data e Com Esse Equipamento");
            }

            rs.close();
            con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void sextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sextoActionPerformed
        if (sexto.isSelected()) {
            prioridade.setText("6° Andar");

        }
    }//GEN-LAST:event_sextoActionPerformed

    private void noteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noteActionPerformed
        if (note.isSelected()) {
            gambiarra.setText("Notebook");

        }


    }//GEN-LAST:event_noteActionPerformed

    private void semActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semActionPerformed
        if (sem.isSelected()) {
            gambiarra.setText("Sem Necessidade");

        }


    }//GEN-LAST:event_semActionPerformed

    private void segundoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_segundoActionPerformed
        if (segundo.isSelected()) {
            prioridade.setText("2° Andar");

        }
    }//GEN-LAST:event_segundoActionPerformed

    private void jRadioButtonMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem3ActionPerformed
            
    try {
        // TODO add your handling code here:
        funcaoa();
      
    } catch (SQLException ex) {
        Logger.getLogger(Sala_Reuniao.class.getName()).log(Level.SEVERE, null, ex);
    }
        
        
        
    }//GEN-LAST:event_jRadioButtonMenuItem3ActionPerformed

    private void jRadioButtonMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem4ActionPerformed

    login l = new login();
        l.setVisible(true);
        setVisible(false);

    }//GEN-LAST:event_jRadioButtonMenuItem4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sala_Reuniao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sala_Reuniao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sala_Reuniao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sala_Reuniao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Sala_Reuniao().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Sala_Reuniao.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton alta;
    private javax.swing.JTextField assunto;
    private javax.swing.JRadioButton auditorio;
    private javax.swing.JRadioButton baixa;
    private javax.swing.JComboBox<String> box;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JFormattedTextField da;
    private javax.swing.JTextField dade;
    private javax.swing.JFormattedTextField e1;
    private javax.swing.JTextField entreequipamento1;
    private javax.swing.JTextField gambiarra;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem4;
    private javax.swing.JRadioButton media;
    private javax.swing.JRadioButton note;
    private javax.swing.JTextField prioridade;
    private javax.swing.JFormattedTextField s;
    private javax.swing.JTextField sala1;
    private javax.swing.JButton salvar;
    private javax.swing.JRadioButton segundo;
    private javax.swing.JRadioButton sem;
    private javax.swing.JRadioButton sexto;
    private javax.swing.JLabel usu;
    // End of variables declaration//GEN-END:variables
    Vector<Integer> idu = new Vector<Integer>();

    public ResultSet listarCargo() throws SQLException {
        Connection con = Conexao.fazconexao();
        String sql = "select * from usuarios order by nome";
        PreparedStatement stmt = con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();
        while (rs.next()) {
            idu.addElement(rs.getInt(1));
            box.addItem(rs.getString(2));
        }
        return null;

    }

}
